name: Deploy Next.js site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get current version
        id: get_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine new version
        id: determine_version
        run: |
          if git log -1 --pretty=%B | grep -q 'feat:'; then
            NEW_VERSION=$(npm version minor -m "Increment version to %s [skip ci]")
          elif git log -1 --pretty=%B | grep -q 'fix:'; then
            NEW_VERSION=$(npm version patch -m "Increment version to %s [skip ci]")
          else
            echo "No version change required"
            exit 0
          fi
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          
          # Show changes in package.json
          echo "Changes in package.json:"
          git diff package.json

      - name: Commit version change
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add package.json package-lock.json
            git commit -m "Bump version to ${{ env.NEW_VERSION }}"
            git push
          else
            echo "No changes to commit"
          fi

  build:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npm" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build Next.js static site
        run: npm run build

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out  # Ensure this points to the correct output directory
          artifact_name: github-pages

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for deployment
          artifact_name: github-pages  # This should match the name you used in the upload step
